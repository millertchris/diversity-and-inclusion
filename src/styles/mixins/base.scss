@import "positioning";
@import "type";

@mixin lightbox() {
	&:before {
		content: "";
		background-image: url($img-path + "search.svg");
		background-color: $black;
		background-size: 50%;
		background-repeat: no-repeat;
		background-position: center;
		width: 2rem;
		height: 2rem;
		display: block;
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
	}
}

@mixin image_cover() {
	width: 100%;
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
	img {
		display: none;
	}
}

@mixin clearList() {
	ul,
	ol {
		list-style-type: none;
		margin: 0;
		padding: 0;
		li:before {
			content: none;
		}
	}
}

@mixin clearBtn() {
	position: relative;
	top: auto;
	left: auto;
	right: auto;
	width: auto;
	height: auto;
	padding: 0;
	font-size: $base-font-size;
	line-height: $base-line-height;
	background: $transparent;
	border: none;
	color: $base-font-color;
	transform: translate(0);
	text-transform: none;
	border-radius: 0;
	box-shadow: none;
	text-shadow: none;
	&:before,
	&:after {
		content: none;
	}
}

@mixin aspect-ratio($width, $height) {
	// https://css-tricks.com/aspect-ratio-boxes/
	// calc(591.44 / 1127.34 * 100%);
	height: 0;
	padding-top: $height / $width * 100%;
}
// @mixin aspectRatio($size) {
// 	width: 100%;
// 	height: 0;
// 	padding-bottom: $size;
// }

// Mixins required for Bitters
@mixin clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}
// Vars required for Bitters
$all-buttons: "button, [type='button'], [type='reset'], [type='submit']";
$all-buttons-active: "button:active, [type='button']:active, [type='reset']:active, [type='submit']:active";
$all-buttons-focus: "button:focus, [type='button']:focus, [type='reset']:focus, [type='submit']:focus";
$all-buttons-hover: "button:hover, [type='button']:hover, [type='reset']:hover, [type='submit']:hover";
$all-text-inputs: "[type='color'], [type='date'], [type='datetime'], [type='datetime-local'], [type='email'], [type='month'], [type='number'], [type='password'], [type='search'], [type='tel'], [type='text'], [type='time'], [type='url'], [type='week'], input:not([type]), textarea";
$all-text-inputs-active: "[type='color']:active, [type='date']:active, [type='datetime']:active, [type='datetime-local']:active, [type='email']:active, [type='month']:active, [type='number']:active, [type='password']:active, [type='search']:active, [type='tel']:active, [type='text']:active, [type='time']:active, [type='url']:active, [type='week']:active, input:not([type]):active, textarea:active";
$all-text-inputs-focus: "[type='color']:focus, [type='date']:focus, [type='datetime']:focus, [type='datetime-local']:focus, [type='email']:focus, [type='month']:focus, [type='number']:focus, [type='password']:focus, [type='search']:focus, [type='tel']:focus, [type='text']:focus, [type='time']:focus, [type='url']:focus, [type='week']:focus, input:not([type]):focus, textarea:focus";
$all-text-inputs-hover: "[type='color']:hover, [type='date']:hover, [type='datetime']:hover, [type='datetime-local']:hover, [type='email']:hover, [type='month']:hover, [type='number']:hover, [type='password']:hover, [type='search']:hover, [type='tel']:hover, [type='text']:hover, [type='time']:hover, [type='url']:hover, [type='week']:hover, input:not([type]):hover, textarea:hover";
$all-text-inputs-invalid: "[type='color']:invalid, [type='date']:invalid, [type='datetime']:invalid, [type='datetime-local']:invalid, [type='email']:invalid, [type='month']:invalid, [type='number']:invalid, [type='password']:invalid, [type='search']:invalid, [type='tel']:invalid, [type='text']:invalid, [type='time']:invalid, [type='url']:invalid, [type='week']:invalid, input:not([type]):invalid, textarea:invalid";

// Triangle helper mixin
// Ref: https://css-tricks.com/snippets/sass/css-triangle-mixin/
// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`
// @param {Color} $color [currentcolor] - Triangle color
// @param {Length} $size [1em] - Triangle size
@mixin triangle($direction, $color: currentcolor, $size: 1em) {
	@if not index(top right bottom left, $direction) {
		@error 'Direction must be either top, right, bottom or left.';
	}

	width: 0;
	height: 0;
	content: "";
	z-index: 2;
	transform: scale(1.01);
	font-size: 0;

	$perpendicular-borders: $size / (1 + 2 / 3) solid transparent;

	@if $direction == top {
		border-left: $perpendicular-borders;
		border-right: $perpendicular-borders;
		border-bottom: $size solid $color;
	} @else if $direction == bottom {
		border-left: $perpendicular-borders;
		border-right: $perpendicular-borders;
		border-top: $size solid $color;
	} @else if $direction == right {
		border-bottom: $perpendicular-borders;
		border-top: $perpendicular-borders;
		border-left: $size solid $color;
	} @else if $direction == left {
		border-bottom: $perpendicular-borders;
		border-top: $perpendicular-borders;
		border-right: $size solid $color;
	}
}
